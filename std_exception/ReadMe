1.목표 : 예외처리에 대해 이해하기

2.정리

-try, catch
	:try문에서 예외가 발생하면 바로 catch문을 실행하도록 한다.
	
-finally
	:예외 발생 시, 강제 실행해야 하는 부분을 위해 사용한다.
	
-예외 던지기(throw, throws)
	:예외 처리를 뒤로 미루어 원하는 단계에서 처리하도록 하기 위해 사용한다.
	
-RuntimeException과 Exception의 차이
	:RuntimeException은 실행 시 발생하는 예외로 발생할 수도 있고 안 할 수도 있는 경우에 사용하고,
	 Exception은 컴파일 시 발생하는 예외로 코드 작성 시에 이미 예측 가능한 예외를 작성할 때 사용한다.
	 
-Transaction을 고려한 예외처리
	:하나의 작업을 처리하는 단위인 트랜잭션을 고려하지 않고 예외 처리를 하면 작업 단계에 혼란을 줄 수 있으므로,
	 트랜잭션을 고려하여 상황에 맞게 throw하여 예외를 처리하도록 한다.